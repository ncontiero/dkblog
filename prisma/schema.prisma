generator client {
  provider        = "prisma-client"
  output          = "../src/lib/generated/prisma"
  engineType      = "client"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostStatus {
  PUBLISHED
  DRAFTED
}

model User {
  id         String   @id @default(cuid())
  externalId String   @unique @map("external_id")
  firstName  String?  @map("first_name")
  lastName   String?  @map("last_name")
  username   String   @unique
  email      String   @unique
  image      String   @default("https://img.clerk.com/preview.png")
  bio        String?
  brandColor String   @default("#000000") @map("brand_color")
  createdAt  DateTime @default(now()) @map("created_at")

  posts Post[]

  @@map("users")
}

model Post {
  id          String     @id @default(cuid())
  userId      String     @map("user_id")
  title       String
  description String?
  content     String
  image       String?
  slug        String     @unique
  status      PostStatus @default(DRAFTED)
  postedOn    DateTime   @default(now()) @map("posted_on")

  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags Tag[]

  @@map("posts")
}

model Tag {
  id          String  @id @default(cuid())
  title       String  @unique
  description String?
  image       String?
  color       String? @default("var(--primary)")
  slug        String  @unique

  posts Post[]

  @@map("tags")
}
